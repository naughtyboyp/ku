题目描述
给出一个不大于 9 的正整数 nn，输出 n\times nn×n 的蛇形方阵。

从左上角填上 1 开始，顺时针方向依次填入数字，如同样例所示。注意每个数字有都会占用 3 个字符，前面使用空格补齐。

输入格式
无

输出格式
无

输入输出样例
输入 #1复制
4
输出 #1复制
  1  2  3  4
 12 13 14  5
 11 16 15  6
 10  9  8  7
 
 
 
 //总结
 1.方向数组的使用 
 2.学会用方向数组探视野  即 tx，ty
 
 
#include<stdio.h>
int main()
{
    int n = 0;
    scanf("%d", &n);
    int a[15][15] = {0};//开地图
    int i = 0;
    int j = 0;
    int x = 1;//初始位置
    int y = 1;
    int tx = 0;
    int ty = 0;
    int pos[4][2] = {0,1,1,0,0,-1,-1,0};//用二维数组内容 来表示 每次的朝向 并且每一组的内容是当前朝向 下一步要走的位置
    int d = 0;//刚开始方向向右 
    for(i = 1; i<=n*n; i++)
    {
        a[x][y] = i;
        tx = x+pos[d][0];//探视野
        ty = y+pos[d][1];
        if(tx<1 || tx >n || ty<1 || ty>n || a[tx][ty])//越界，或者数组已被占用，就改变方向
        {
            d+=1;
            d%=4;
        }
        x+=pos[d][0];
        y+=pos[d][1];
    }
    for(i = 1; i<=n; i++)
    {
        for(j = 1; j<=n; j++)
        {
            printf("%3d", a[i][j]);
        }
        printf("\n");
    }
    return 0;
}
