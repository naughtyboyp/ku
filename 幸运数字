菜菜有一个很喜欢的数字，那个数字菜菜的幸运数字。可是有一天，菜菜一不小心把那个数字打碎了（不要问为啥数字可以摔碎，我说可以就是可以），变成了一堆无序的数字（0≤ai<10）。有仙女看到菜菜因为幸运数字碎掉很伤心，所以她就想帮一帮菜菜。但是由于仙女的魔法是有限的，所以她只能告诉菜菜第i个数字对应的是第几位，现在由你来帮菜菜还原她的幸运数字吧。

Input
多组输入

先输入n（0<n <10000)，代表有n个数字

接下来n个数字代表摔碎的数字ai （0≤ai< 10）

接下来n个数字代表第i个数字对应的位数bi（1≤bi≤n）

bi唯一不重复，因为毕竟一个位置只能有一个数

Output
输出菜菜的幸运数

SampleInput
3
1 2 3
3 1 2
3 
0 0 2
1 2 3
SampleOutput
231
2

hint： 样例2是002   前导0当然得去掉


//运用数组进行排序，其次注意特判
#include<stdio.h>
int a[10005];//存放数字
int b[10005];//记录位置
int c[10005];//排序
int main()
{
    int n = 0;
    while(~scanf("%d", &n))
    {
        int i = 0;
        int j = 0;
        int m = 1;//判断第一位是不是 0
        for(i = 0; i<n; i++)
        {
            scanf("%d", &a[i]);
        }
        for(i = 0; i<n; i++)
        {
            scanf("%d", &b[i]);
        }
        for(i = 0; i<n; i++)
        {
            c[b[i]] = a[i];//排序
        }
        for(i = 1; i<=n; i++)
        {
            if(m)
            {
                for(j = 1; j<=n; j++)//遍历c数组
                {
                    if(c[j] != 0)//首位置不是0，即退出
                    {
                        m = 0;
                        i = j;
                        break;
                    }
                    else if(j == n)
                    {
                        printf("%d", 0);
                        break;
                    }
                }
            }
            if(j == n)
            {
                break;
            }
            printf("%d", c[i]);
        }
        printf("\n");
    }
    return 0;
}
