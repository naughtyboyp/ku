花瓣
TimeLimit:1000MS  MemoryLimit:128MB
64-bit integer IO format:%lld
Problem Description
Seventh看上了一个机械键盘，但是他不确定要不要买，所以他找了一堆花，一个接一个的撕下花瓣，每撕下一个花瓣后他就会说出买或者不买，上一个是买，那么下一个就是不买，总是以买开头，当时其实还是想买的，Seventh所以他想挑出一些花组成花束，这花束要满足花瓣的和是奇数，且花瓣的数量最多。

Input
多组输入，请处理到文件结束（EOF）

第一行包含一个整数n（1≤n≤100），这是花朵的数量。第二行包含n个整数ai（1≤ai≤100），它们表示给定第i朵花上的花瓣数量。

数据组数<=200

Output
输出花束中花瓣数量的和最大时花瓣的数量，且这个数量一定会导致“买”。如果没有这样的花束，则输出0。花束可能只由一朵唯一花组成。


SampleInput
3
5 6 7
1
2
SampleOutput
13
0


//关键在于如何排序的问题，我的做法是直接用排序算法  第二种别的做法是预处理 我觉得很OK
#include<stdio.h>
void ShellSort(int* a, int len)
{
    int i = 0;
    int j = 0;
    int k = 0;
    int gap = 0;
    int temp = 0;
    for(gap = len/2; gap>0; gap/=2)
    {
        for(i = 0; i<gap; i++)
        {
            for(j = i+gap; j<len; j+=gap)
            {
                temp = a[j];
                k = j - gap;
                while(k>=0 && temp > a[k])
                {
                    a[k+gap] = a[k];
                    k-=gap;
                }
                a[k+gap] = temp;
            }
        }
    }
}
int main()
{
    int n = 0;
    while(~scanf("%d", &n))
    {
        int fl[101] = {0};
        int i = 0;
        int sum = 0;
        int flag = 0;
        int k = n-1;
        for(i = 0; i<n; i++)
        {
            scanf("%d", &fl[i]);
            sum+=fl[i];
            if(fl[i] & 1 && flag == 0)
            {
                flag = 1;//出现奇数
            }
        }
        if(flag == 0)//没有奇数
        {
            printf("%d\n", 0);
        }
        else if(sum & 1)//总和是奇数
        {
            printf("%d\n", sum);
        }
        else//sum是偶数,减去最小奇数就行了
        {
            for(i = k; i>=0; i--)
            {
                if(fl[i] & 1)
                {
                    sum-=fl[i];
                    break;
                }
            }
            printf("%d\n", sum);
        }
    }
    return 0;
}


//预处理的方法
#include<stdio.h>
int main()
{
    int n = 0;
    while(~scanf("%d", &n))
    {
        int fl[101] = {0};//下标表示花瓣数量，值为出现次数，用空间换时间
        int i = 0;
        int sum = 0;
        int flag = 0;
        int an = 0;
        for(i = 0; i<n; i++)
        {
            scanf("%d", &an);
            sum+=an;
            if(an & 1)
            {
                flag = 1;//出现奇数
                fl[an]++;
            }
        }
        if(flag == 0)//没有奇数
        {
            printf("%d\n", 0);
        }
        else if(sum & 1)//总和是奇数
        {
            printf("%d\n", sum);
        }
        else//sum是偶数,减去最小奇数就行了
        {
            for(i = 1; i<=100; i++)//我们只要减去最小奇数，所以从小到大找是奇数的花瓣
            {
                if(fl[i])//fl[i]表示该花瓣数量是否出现过
                {
                    sum-=i;//i表示的是花瓣数量
                    break;
                }
            }
            printf("%d\n", sum);
        }
    }
    return 0;
}
