蝈蝈的a-b（middle）
TimeLimit:1000MS  MemoryLimit:64MB
64-bit integer IO format:%lld
已解决 | 点击收藏
Problem Description
顾名思义，输入整数 a 和 b，输出 a - b 

Input
输入一行两个整数 a 和 b（1 ≤ lena，lenb ≤ 1e5，其中 lena 和 lenb 分别为数字 a 和 b 的长度，数字 a 和 b 均为非负数，且不会带前缀 0，除非该数字本身就是 0）

Output
输出一行表示答案（请不要带前缀 0，除非输出的数字本身就是 0）

SampleInput
1 2
SampleOutput
-1

#include<stdio.h>
#include<string.h>
char a[100005];
char b[100005];
int x[100005];
int y[100005];
int z[100005];
void sub(int* x, int* y, int len)
{
    int i = 0;
    int j = 0;
    for(i = 0; i< len; i++)
    {
        if(x[i] >= y[i])
        {
            z[i] = x[i] - y[i];
        }
        else
        {
            z[i] = x[i]+10 - y[i];
            x[i+1]-=1;
        }
    }
    for(i = len-1; i>0; i--)//要至少保留一位0哦
    {
        if(z[i] == 0)
        {
            len--;
        }
        else
        {
            break;
        }
    }
    for(i = len-1; i>=0; i--)
    {
        printf("%d", z[i]);
    }

}
int main()
{
    scanf("%s%s", a, b);
    int len1 = strlen(a);
    int len2 = strlen(b);
    int i = 0;
    int k = 0;
    for(i = len1-1, k = 0; i >= 0; i--)
    {
        x[k++] = a[i] - '0';
    }
    for(i = len2-1, k = 0; i >= 0; i--)
    {
        y[k++] = b[i] - '0';
    }
    if(len1 > len2)
    {
        sub(x,y, len1);
    }
    else if(len1 < len2)
    {
        printf("-");
        sub(y, x, len2);
    }
    else//位数相同
    {
        for(i = len1-1; i>=0; i--)//从最大位开始
        {
            if(x[i] == y[i])
            {
                if(i == 0)
                {
                    printf("0");
                }
                continue;
            }
            if(x[i] > y[i])
            {
                sub(x, y, len1);
                break;
            }
            if(x[i] < y[i])
            {
                printf("-");
                sub(y, x, len2);
                break;
            }
        }
    }
    return 0;
}
