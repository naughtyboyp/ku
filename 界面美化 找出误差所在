DOS界面美化
TimeLimit:1000ms  MemoryLimit:128000KB
64-bit integer IO format:%lld
Problem Description
同学们现在写的程序都是DOS界面的吧，DOS界面下要做得美观不太容易呢。比如要在屏幕上输出一个菜单项，使它如下美观地显示，该怎么做呢？
          ******************************
          *       the 1st string       *
          *       the 2nd string       *
          *       the 3st string       *
          *          abcdefg           *
          ******************************
每行从第一个“*”到最后一个“*”总长度是L。
假设屏幕一行可以显示80个字符，这段字符要显示在屏幕的中间。
上面的例子中，每个字符串都显示在两个“*”之间的中间。
如果不能显示在正中间，则左边的空格数比右边的空格数少一。
 
Input
第一行是一个整数T（T<50）。接下来有T个案例，每个案例的第一行有两个整数N和L（N<1000000,3<=L<80），N表示接下来有N行，每行是一个字符串，表示N个要输出的字符串（每个字符串的长度不超过L-2）。L表示每行的第一个“*”到最后一个“*”的长度。
Output
请按照案例输出，每个案例的第一行和最后一行是一行长度为L的全部是“*”的字符串，每行的最后一个“*”后面没有多余的空格，每两个案例之间有一个空行。
SampleInput
2
4 30
the 1st string
the 2nd string
the 3th string
abcdefg
4 20
123
1234
12345
123456
SampleOutput
                         ******************************
                         *       the 1st string       *
                         *       the 2nd string       *
                         *       the 3st string       *
                         *          abcdefg           *
                         ******************************

                              ********************
                              *       123        *
                              *       1234       *
                              *      12345       *
                              *      123456      *
                              ********************
                              
                              
//本题关键点在于  找出x/2的误差所在，如果x是奇数的话 那么他就会少1   那么通过这个我们就可以来做个特判，当x是奇数的话  就要求右边的要多一个。
//总结，  做这种居中的题目，就是要找出什么时候左右是不对称的，什么时候左右能对称
//通过此题我们深刻的理解到了，当x是奇数的时候，若还x/2，那么就相当于 （x-1）/2，值会少1，
// 做这种居中的题目，打印空格的数量取决于一分为二的长度是奇数还是偶数，如果是奇数，就会少一，这时候看题目要求是右边的更多，那就右边的空格数量加一就好了
#include <stdio.h>
#include <stdlib.h>
#include<string.h>
char str[1000005][99];
int main()
{
    int t = 0;
    scanf("%d", &t);
    while(t--)
    {
        int n = 0;
        int l = 0;
        int j = 0;
        scanf("%d%d", &n, &l);
        getchar();
        int i = 0;
        int lo = (80-l)/2;
        for(i = 0; i<n; i++)
        {
            gets(str[i]);
        }
        for(i = 0; i<lo; i++)
        {
            printf(" ");
        }
        for(i = 0; i<l; i++)
        {
            printf("*");
        }
        printf("\n");
        for(i = 0; i<n; i++)
        {
            for(j = 0; j<lo; j++)//打印前面的
            {
                printf(" ");
            }
            int len = strlen(str[i]);
            printf("*");
            int num = (l-2-len)/2;//取一半，如果是奇数，会少1
            for(j = 0; j<num; j++)
            {
                printf(" ");
            }
            printf("%s", str[i]);
            if((l-2-len) & 1)//打印空格的数量取决于一分为二的长度是奇数还是偶数，如果是奇数，就会少一，这时候看题目要求是右边的更多，那就右边的空格数量加一就好了
            {
                num++;
            }
            for(j = 0; j<num; j++)
            {
                printf(" ");
            }
            printf("*\n");
        }
        for(i = 0; i<lo; i++)
        {
            printf(" ");
        }
        for(i = 0; i<l; i++)
        {
            printf("*");
        }
        printf("\n");
        printf("\n");
    }
    return 0;
}
