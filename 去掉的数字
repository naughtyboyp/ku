用 求和 的方式来解决，计算 1-n 的和，以及数组中（n-1）个数字的和，二者相差的数字，就是删掉的那个数字。
//不能用数组
#include<stdio.h>
int main()
{
    int n = 0;
    while(~scanf("%d", &n))
    {
        int i = 0;
        int sum1 = 0;//计算n-1个和
        int a = 0;
        int sum = 0;//计划1-n的和
        for(i = 0; i< n-1; i++)
        {
            scanf("%d", &a);
            sum1+=a;
        }
        for(i = 1; i<=n; i++)
        {
            sum+=i;
        }
        printf("%d\n", sum-sum1);
    }
    return 0;
}



从1到n共n个连续有序的数字,任意去掉2个,把剩下的(n-2)个打乱顺序放到了一个整形数组中,求出那两个去掉的数字？不能通过排序实现。

思路分析：

用 1 + 2 + ... + n，减去数组中的数字，可以得到被删除的两个数字之和，即 a + b。

同理，我们可以用 1 * 2 * ... * n 的积，除以数组中的数字，即可得到被删除的两个数字之积，即 a * b。

而根据 （a - b)^2 = (a + b)^2 - 4ab，可以推导出 a 和 b 的值。





问题描述：从1到n共n个连续有序的数字,随机取一个去掉，再在剩余的数字中随机取一个重复,把得到的 n 个数字打乱顺序放到了一个整形数组中,找出去掉的数字和重复的数字？不能通过排序实现。

思路分析：

整体思路还是跟上面的一致（假设删除的是数字是 a ，重复的数字是 b）。

计算 1 + 2 + ... + n，减去数组中的数字，得到的结果是 a - b。

同理，我们计算 1 * 2 * ... * n 的积，除以数组中的数字，得到的结果是 a / b。


